# Upstream para o backend consolidado
upstream backend_consolidated {
    server backend-multitenant-production.up.railway.app:443;
}

# Upstream para o frontend consolidado
upstream frontend_consolidated {
    server frontend-consolidated-production.up.railway.app:443;
}

# Mapa para identificar o tenant baseado no subdomínio
map $host $tenant {
    default "unknown";
    
    # Mapeamento de todos os subdomínios para tenants
    ed.peakpay.com.br "ed";
    johann.peakpay.com.br "johann";
    isabele.peakpay.com.br "isa";
    franciele.peakpay.com.br "franciele";
    giga.peakpay.com.br "giga";
    lala.peakpay.com.br "lala";
    karen.peakpay.com.br "karen";
    chaves.peakpay.com.br "chaves";
    brand.peakpay.com.br "brandao";
    angela.peakpay.com.br "angela";
    rude.peakpay.com.br "rude";
    pantera.peakpay.com.br "pantera";
    gorila.peakpay.com.br "gorila";
    pinducci.peakpay.com.br "pinduca";
    tenente.peakpay.com.br "tenente";
    basa.peakpay.com.br "basa";
    elite.peakpay.com.br "elite";
}

# Configuração principal do servidor
server {
    listen 80;
    server_name *.peakpay.com.br;

    # Headers de segurança
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # CORS headers
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;

    # Handle OPTIONS requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
        add_header Access-Control-Max-Age 1728000;
        add_header Content-Type "text/plain; charset=utf-8";
        add_header Content-Length 0;
        return 204;
    }

    # Roteamento para APIs do backend
    location /api/ {
        # Adicionar header do tenant
        proxy_set_header X-Tenant $tenant;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Proxy para o backend consolidado
        proxy_pass https://backend_consolidated;
        proxy_ssl_server_name on;
        proxy_ssl_verify off;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Roteamento para arquivos estáticos e páginas do frontend
    location / {
        # Adicionar header do tenant
        proxy_set_header X-Tenant $tenant;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Proxy para o frontend consolidado
        proxy_pass https://frontend_consolidated;
        proxy_ssl_server_name on;
        proxy_ssl_verify off;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Logs específicos por tenant
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
}

# Servidor para domínios não reconhecidos
server {
    listen 80 default_server;
    server_name _;
    
    return 404 "Domínio não encontrado";
}